image: node:22.16-alpine

variables:
  POSTGRES_DB: iluminatti
  POSTGRES_USER: iluminatti
  POSTGRES_PASSWORD: notsecure
  POSTGRES_HOST_AUTH_METHOD: trust
  NODE_ENV: production
  DB_HOST: pg-server
  DB_NAME: iluminatti
  DB_USER_NAME: iluminatti
  DB_USER_PASS: notsecure

cache:
  key: node-modules-$CI_COMMIT_SHORT_SHA
  paths:
    - code/node_modules/

job::npm::install:
  cache:
    key: node-modules-$CI_COMMIT_SHORT_SHA
    paths:
      - code/node_modules/

  stage: build
  script:
    - ls -la || true
    - ls -la node_modules || true   
    - ls -la code/node_modules || true

    - cd code
    - npm ci

    - ls -la || true
    - ls -la node_modules || true   

job::integration::test:
  services:
    - name: postgres:14-alpine
      alias: pg-server

  cache:
    key: node-modules-$CI_COMMIT_SHORT_SHA
    paths:
      - code/node_modules/

  needs:
    - job::npm::install

  before_script:
    - apk add postgresql
    - export PGPASSWORD=$POSTGRES_PASSWORD
    - psql -h "$DB_HOST" -U "$DB_USER_NAME" -d "$DB_NAME" < resources/postgresql/initdb.d/0_db_init.sql
    - psql -h "$DB_HOST" -U "$DB_USER_NAME" -d "$DB_NAME" < resources/postgresql/initdb.d/data_survey_001.sql
    - psql -h "$DB_HOST" -U "$DB_USER_NAME" -d "$DB_NAME" < resources/postgresql/initdb.d/data_survey_002.sql
    - psql -h "$DB_HOST" -U "$DB_USER_NAME" -d "$DB_NAME" < resources/postgresql/initdb.d/data_survey_003.sql
    - psql -h "$DB_HOST" -U "$DB_USER_NAME" -d "$DB_NAME" < resources/postgresql/initdb.d/zz_create_views.sql

  script:
    - ls -la || true
    - ls -la node_modules || true   
    - ls -la code/node_modules || true

    - cd code
    
    - ls -la || true
    - ls -la node_modules || true   

    - npm run test || true

    - ls -la || true
    - ls -la node_modules || true   

  after_script:
    - ls -la || true
    - ls -la node_modules || true   
    - ls -la code/node_modules || true

  artifacts:
    paths:
      - "code/coverage/lcov-report/"

